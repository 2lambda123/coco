Error catching:
*problem with the tables: too many floats to handle -> maybe more than 12?
*tables are hard to read: columns do not have all the same width
*IOError with pickled data. -> dealt with?
*Problem with MINGW32 os.sep returns a \ ! -> dealt with?

Feature missing:
*Automatically generate the associated TeX file to compile...
*rewrite the ppXXX with common script in pproc...
*Manage multiple algorithms.
*put in pproc methods to determine success and failure so as to have uniform
data for all ppXXX modules.
*put the right bibtex entry in the templatearticle.
*Summary tables of ENFEs
*have low-level post-processing functions that deals with arrays.
*Deal with archive file -> no file-like object for zipfile module in python 2.5.2
*Compute the entropy based on the comment line in the info file?
*Compare results from different algorithms! -> How?
*Readable output instead of pickle files?

Misc.
*Provide a clean doc page that is helpful and useful -> pydoc.writedocs('.') in BBOB/code/python
*Put the pydoc online.
*Problem with some fonts missing for tex compilation.
*Think about adding bbob.bib to the release.
*Explicit demo post processing.
*Update the readme from the demo folder.

Profiling:


###############################################################################
SOLVED:
*diagnose that all the trials (3) for all instance id (1..5) are there -> added instanceOfInterest and warning in run.py.
*Write somewhere the result of the discussion about maxEvals.
*does the maxEvalsFactor appearing in ppfigdim still makes sense? -> It does not. It's been removed
*Make sure that anyone could produce a fig, table or data profile for every dimensions, functions they want.
*Problem with some negative values on f-fopt on function 5!!! -> the post processing does not crash on negative values anymore.
*When given a wrong path, nothing happens...
*maxEvalsFactor appears in pptex and pprldistr and ppfig and have to be synchronized -> only appear in ppfigdim now.
*Deal with data with more than one algId -> warning
*Problem with maxEvalsFactor in pprldistr: if maxEvalsFactor is not set alright, there is a good chance one of the final value distribution graph for maxEvalsF = 10^i*D will overlap one of the graph where Deltaf changes.
*warning: no labels for legend
*Put a latex macro in the template to input the path to the external files.
*Play with the fontsize (smaller titles, larger ticks).
*Update experimentation.tex
*New tex table format:
  Df # ERT 10% 90% Tus
  Df 0 median_f 10%f 90%f Tus
*Have SP1 on the data profile graph as well? -> not needed
*synchronize the caption of the data profiles with information from the post processing? -> legend
*Put a separation line in the table between function evaluations and function values -> Not needed
*Have the number of solved functions appear on the data profile graph
*Prepare for vertical aligning!
*make tab-only faster: it doesn't need to process everything...
*final function value distribution.
*generate data for the run length distrib figure, ppfig and pptex not in pproc (to make pprldistr pptex and ppfig modules self-consistent)
*sign missing for function values in the tables!
*PprocIndexEntry class to be implemented -> IndexEntry
*Change mention of data profile graph to run length graph.
*Caption of the tables is too large!
*max. FEvals appearing in the tables is not the one set for the experiment but
an empirical value (measured). -> OK.
*Move the figures and make them larger. -> thx Niko
*test runs with CMA-ES: -> Bug solved!
**only if the target function value is negative, successful runs are actually treated as successful
**the graphs seem to go wrong when fopt is positive, see attached pdf, f2, f3, f4, f5, f6
**another problem is in the tables, as already f_t is not reported properly
*Documentation: import pydoc, pydoc.writedoc(module_of_choice) -> pydoc.writedocs('.','') in BBOB/code/python
*Short titles for the figures
*Problem with reading the data: the last line was left unread
*Problem with the median that was defined though it was not.
*Problem with Gtk/gdk over ssh (import matplotlib) -> ssh -X
*delete tex before writing in at the launch of the post processing... are the files written in again? -> They are not so the output tex files are simply overwritten.
*last figures: not spanned over the width of the page -> put a tabular.
*increased font size for figure -> parameter in __init__.py
*Change ticks labels font size -> parameter in __init__.py
*Visible Symbol for the last function value reached -> Make more visible?
*F_t in the tables instead of f_t (cf experimentation.pdf ยง6.4)
*BUG: demo.py when the toydata folder does not exist -> catch when args is empty.
*function values in italics missing -> pproc.py has to return in arrayTab the right things.
*Problem with demo (is not working): no possibility of shorter demo due to writeTable2. It should try and take as input a list of arrays.
*computevalues: rename and make some varargin -> not used anymore
