[build-system]
requires = [
  "setuptools >=61.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "cocopp"
authors = [
  {name="Dimo Brockhoff", email="dimo.brockhoff@inria.fr"},
  {name="Nikolaus Hansen", email="nikolaus.hansen@inria.fr"},
]
description = 'Postprocessing for benchmark experiments of black-box optimization algorithms. '
readme = "README.md"
license = {text = "BSD-3-Clause"}
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Framework :: IPython",
  "Framework :: Jupyter",
  "Intended Audience :: Education",
  "Intended Audience :: Other Audience",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "matplotlib >=3.6.0",
  "numpy >=1.23.0",
  "scikit-learn >=1.2.0",
]
dynamic = ["version"]

[project.urls]
Repository = 'https://github.com/numbbo/coco'
Issues = 'https://github.com/numbbo/coco/issues'

[tool.setuptools]
packages = ["cocopp", "cocopp.comp2", "cocopp.compall"]
#   package_data={_name: ['*enchmarkshortinfos.txt',
#                          '*enchmarkinfos.txt',
#                          'best*algentries*.pickle',
#                          'best*algentries*.pickle.gz',
#                          'refalgs/best*.tar.gz',
#                          'pprldistr2009*.pickle.gz',
#                          'latex_commands_for_html.html',
#                          'js/*', 'tth/*',
#                          '../latex-templates/*.tex',
#                          '../latex-templates/*.cls',
#                          '../latex-templates/*.sty',
#                          '../latex-templates/*.bib',
#                          '../latex-templates/*.bst',
#                          ]},

[tool.setuptools.dynamic]
version = {attr = "cocopp._version.__version__"}

[tool.ruff]
line-length = 120
select = ["E", "F"]
ignore = []
exclude = ["__init__.py", "build", "dist"]
per-file-ignores = {}
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py310"

[tool.ruff.mccabe]
max-complexity = 10

[tool.black]
line-length = 120
target-version = ["py310"]
