#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""Example script showing all different figures generated by the package."""

import glob
import numpy as np
from matplotlib import pyplot as plt
import bbob_pproc as bb
from bbob_pproc import ppsingle, pprldistr, ppfigdim
from bbob_pproc.compall import ppperfprof

# TODO: show the current code (modified for the example) and show the things that are working now.
# TODO: load example data

ds = bb.load(glob.glob('exampledata/IPOP-CMA-ES/ppdata_f005_20.pickle'))
bb.info(ds) # display information on ds

#TODO: info(ds[0]) # should this do something?

# Single runs (Df vs #evals): 1 algorithm, 1 function, 1 dimension
data = ds[0].funvals
# Array which 1st column is the number of function evaluations and which all
# subsequents columns are the best function values obtained for the given
# number of function evaluations. One column equals to 1 run.

nbrows, nbcols = np.shape(data)

plt.figure()
for i in range(1, nbcols):
    plt.loglog(ds[0].funvals[:, 0], ds[0].funvals[:, i])
plt.show()

plt.figure()
ppsingle.plot(ds[0], kwargs={'color': 'blue'})
ppsingle.beautify()
plt.show()

# ECDFs (%runs vs (#evals or values): 1 algorithm, 1 dimension
plt.figure()
pprldistr.plot(ds)
pprldistr.beautify()
plt.show()

# ECDF boostrapped ERT distribution
plt.figure()
ppperfprof.plot(ds)
ppperfprof.beautify()
plt.show()

ds = bb.load(glob.glob('exampledata/IPOP-CMA-ES/ppdata_f0*_20.pickle'))

plt.figure()
pprldistr.plot(ds)
pprldistr.beautify()
plt.show()

ds = bb.load(glob.glob('exampledata/IPOP-CMA-ES/ppdata_f0*_20.pickle'))

# ECDF boostrapped ERT distribution
fig = plt.figure()
ppperfprof.plot(ds, kwargs={'color': 'blue'})
ppperfprof.beautify()
plt.show()

ds = bb.load(glob.glob('exampledata/BIPOP-CMA-ES/ppdata_f0*_20.pickle'))
h = ppperfprof.plot(ds, kwargs={'color': 'green', 'linestyle': '--'})
plt.show()

ds = bb.load(glob.glob('exampledata/IPOP-CMA-ES/ppdata_f003_20.pickle'))

# Scaling figure (ERT vs dimension): 1 algorithm, 1 function
plt.figure()
ppfigdim.plot(ds, (1e-8,))

ds = bb.load(glob.glob('../../demo/postProcessing/IPOP-CMA-ES/ppdata_f003_*.pickle'))
ppfigdim.plot(ds, (1e-8,))
ppfigdim.beautify()
plt.show()

# Sandboxing: plot ERT vs condition number
#ds = bb.load('exampledata/ipopcma1e6')
#ds.pickle()
#plt.figure()
#ppfig.plot(ds)
#ppfig.beautify()
#plt.show()

